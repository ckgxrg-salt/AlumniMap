//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.8

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "people")]
pub struct Model {
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
    #[sea_orm(primary_key)]
    pub id: i32,
    pub id_num: i32,
    pub cn_name: String,
    pub en_name: Option<String>,
    pub class_of: i32,
    pub major: Option<String>,
    pub profile: Option<String>,
    pub email: Option<String>,
    pub qq: Option<String>,
    pub wechat: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::university_people::Entity")]
    UniversityPeople,
}

impl Related<super::university_people::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UniversityPeople.def()
    }
}
